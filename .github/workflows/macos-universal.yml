name: MacOS Universal
on:
  workflow_dispatch:
jobs:
  build:
    name: Build Universal macOS
    runs-on: macos-12
    strategy:
      matrix:
        qt_ver: [5.15.2]
    env:
      targetName: Xplist
      VERSION: Mac-Universal
              
    steps:
      - name: Install Qt for x86_64
        uses: jurplel/install-qt-action@v3.3.0
        with:
          version: ${{ matrix.qt_ver }}
          arch: clang_64
          cache: false
          
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1
          
      - name: Build x86_64 version
        run: |
          qmake
          make
          mv bin/release/${targetName}.app bin/release/${targetName}_x86_64.app
          
      - name: Install Qt for ARM64
        uses: jurplel/install-qt-action@v3.3.0
        with:
          version: ${{ matrix.qt_ver }}
          arch: clang_arm64
          cache: false
          
      - name: Build ARM64 version
        run: |
          qmake
          make
          mv bin/release/${targetName}.app bin/release/${targetName}_arm64.app
          
      - name: Create Universal Binary
        run: |
          # 创建通用二进制文件
          lipo -create \
            bin/release/${targetName}_x86_64.app/Contents/MacOS/${targetName} \
            bin/release/${targetName}_arm64.app/Contents/MacOS/${targetName} \
            -output bin/release/${targetName}_universal
          
          # 复制 ARM64 版本的 .app 结构
          cp -R bin/release/${targetName}_arm64.app bin/release/${targetName}.app
          
          # 替换为通用二进制文件
          cp bin/release/${targetName}_universal bin/release/${targetName}.app/Contents/MacOS/${targetName}
          
          # 设置执行权限
          chmod +x bin/release/${targetName}.app/Contents/MacOS/${targetName}
          
      # 打包
      - name: package
        run: |
          # 拷贝依赖
          cp -f Info.plist bin/release/${targetName}.app/Contents/Info.plist
          
          macdeployqt bin/release/${targetName}.app -qmldir=. -verbose=1 -dmg
          
      # 上传artifacts          
      - uses: actions/upload-artifact@v4
        with:
          name: ${{ env.targetName }}_${{ env.VERSION }}
          path: bin/release/${{ env.targetName }}.dmg
          
      # tag 上传Release
      - name: uploadRelease
        if: startsWith(github.event.ref, 'refs/tags/')
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: bin/release/${{ env.targetName }}.dmg
          asset_name: ${{ env.targetName }}_${{ env.VERSION }}.dmg
          tag: ${{ github.ref }}
          overwrite: true 